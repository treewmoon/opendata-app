<div id="record-edit">
  <div class="flex">
          <div class="start">
            <%= Station.find(@record.start_station_id).name_ja %></div>
          <div class="direction">â‡’</div>
          <div class="goal">
          <%= Station.find(@record.goal_station_id).name_ja %></div>
          <div class="train">
            <%= image_tag '1218.png', :size =>'100x50', class: "vibration" %>
          </div>
        </div>

<ul class="progress">
   <li id = "timer_in_circle" data-name="Timer" data-percent = '00:00'>
        <svg viewBox="-10 -10 220 220">
        <g fill="none" stroke-width="6" transform="translate(100,100)">
        <path d="M 0,-100 A 100,100 0 0,1 86.6,-50" stroke="url(#cl1)"/>
        <path d="M 86.6,-50 A 100,100 0 0,1 86.6,50" stroke="url(#cl1)"/>
        <path d="M 86.6,50 A 100,100 0 0,1 0,100" stroke="url(#cl1)"/>
        <path d="M 0,100 A 100,100 0 0,1 -86.6,50" stroke="url(#cl1)"/>
        <path d="M -86.6,50 A 100,100 0 0,1 -86.6,-50" stroke="url(#cl1)"/>
        <path d="M -86.6,-50 A 100,100 0 0,1 0,-100" stroke="url(#cl1)"/>
        </g>
        </svg>
  </li>
</ul>

<!--  Defining Angle Gradient Colors  -->
<svg width="0" height="0">
  <defs>
    <linearGradient id="cl1" gradientUnits="objectBoundingBox" x1="0" y1="0" x2="1" y2="1">
      <stop stop-color="#0ca678"/>
      <stop offset="100%" stop-color="#0ca678"/>
    </linearGradient>
  </defs>
</svg>

<div id ="timer">00:00</div>
    <script>
      $(function(){
        var timer = document.getElementById('timer');
        var startTime;
        var elapsedTime = 0;
        var timerId;
        var timeToadd = 0;

        function updateTimetText(){
          var m = Math.floor(elapsedTime / 60000);
          var s = Math.floor(elapsedTime % 60000 / 1000);
          m = ('0' + m).slice(-2);
          s = ('0' + s).slice(-2);
          timer.textContent = m + ':' + s;
        }
        function countUp(){
          timerId = setTimeout(function(){
            elapsedTime = Date.now() - startTime + timeToadd;
            updateTimetText();
            countUp();
            $('#timer_in_circle').attr("data-percent",timer.textContent);
          },10);
        }
        window.onload = function(){
          startTime = Date.now();
          countUp();
        }

        // $('#timer_in_circle').on('click', function(e){
        //   console.log($('#timer_in_circle').attr("data-percent"));
        //   $('#timer_in_circle').attr("data-percent",timer.textContent)
        // })


        $('.GOAL').on('click', function(e){
          clearTimeout(timerId);

          var running_time = timer.textContent.split(':');
          var min = Number(running_time[0]);
          var sec = Number(running_time[1]);
          var running_time_sec = min*60 + sec;

          $("#input_running_time").attr("value", timer.textContent);
          var cal = 1.05 * 6.0 / 60 * parseFloat(timer.textContent) * <%= current_user.weight %>;
          $("#input_calory").attr("value", cal);

          var result;
            if (arrival_time_sec >= start_time_sec + running_time_sec) {
              result = 0;
            } else {
              result = 1;
            }
          $("#result").attr("value", result);
        })

        var starttime =  $("#nowtime").data("nowtime");
        var start_time = starttime.split(':');
        var hour_s = Number(start_time[0]);
        var min_s = Number(start_time[1]);
        var start_time_sec = hour_s*3600 + min_s*60;

        var arrivalTime =  $("#arrivalTime").data("arrivaltime");
        var arrival_time = arrivalTime.split(':');
        console.log(arrival_time);
        var hour_a = Number(arrival_time[0]);
        var min_a = Number(arrival_time[1]);
        var arrival_time_sec = hour_a*3600 + min_a*60;


        var trainRunningTime = arrival_time_sec - start_time_sec;
        var speed_s = 80 / trainRunningTime;
        var speed_ms = speed_s * 1000;
        var time_per_once_s = trainRunningTime/10;
        var time_per_once_ms = time_per_once_s * 1000;

        var n = 0;
        var img = $('img').css({left:'0',position:'absolute'});
        var movemove = function(){
          $('img').stop().animate({left:'+=' + 8 + 'vw'},speed_ms);
          n = n + 1;
          if ( n >= 10 ) {
            stopTrain();
          }else{
          };
        }
        var trainMove;
        trainMove = setInterval(movemove,time_per_once_ms);

        function stopTrain(){
          clearInterval(trainMove);
        }
      });
    </script>

  <div class="contents row">
    <%= form_tag("/records/#{@record.id}", method: :patch) do %>
      <div class="container">
        <div>
          <h4>
          START
            <% nowtime = Record.get_now_time %>
            <%= nowtime %>
            <div style="display: hidden" id="nowtime" data-nowtime=<%= nowtime %>></div>
          GOAL
            <% json = Jre_api.get_train_timetable %>
            <% arrivalTime = Record.get_arrivalTime(@record.opponent,@record.goal_station_id,json) %>
             <div style="display: hidden" id="arrivalTime" data-arrivalTime=<%= arrivalTime %>></div>
          </h4>
        </div>
        <input id = "input_running_time" type="hidden" name="running_time">
        <input id = "input_calory" type="hidden" name="consumed_calory">
        <input id = "result" name="result" type="hidden">
        <div class="wrap1">
          <button class="GOAL" type="submit">GOAL</button>
        </div>
      <% end %>
      </div>
  </div>
